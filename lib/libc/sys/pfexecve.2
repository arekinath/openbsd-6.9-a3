.\" Copyright 2021, the University of Queensland
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.Dd $Mdocdate: October 1 2021 $
.Dt PFEXECVE 2
.Os
.Sh NAME
.Nm pfexecve
.Nd execute a file with elevated privileges
.Sh SYNOPSIS
.In sys/pfexec.h
.Ft int
.Fn pfexecve "const struct pfexecve_opts *opts" "const char *path" "char *const argv[]" "char *const envp[]"
.Sh DESCRIPTION
.Fn pfexecve
requests elevated privileges from the system and then transforms the calling
process into a new process in the same way as
.Xr execve 2 .
The new process is constructed from an ordinary file,
whose name is pointed to by
.Fa path ,
called the
.Em new process file .
This file is either an executable object file,
or a file of data for an interpreter.
.Pp
Elevation of privilege may be allowed or denied by system policy, which is
determined by the daemon
.Xr pfexecd 8 .
The kernel will provide information about the process calling
.Fn pfexecve
to
.Em pfexecd
in order to allow it to reach a decision.
.Pp
The argument
.Fa opts
is a pointer to a
.Em pfexecve_opts
structure:
.Bd -literal -offset indent
struct pfexecve_opts {
	uint32_t	 pfo_flags;
	char		 pfo_user[LOGIN_NAME_MAX];
};
.Ed
.Pp
The
.Em pfo_flags
member of the
.Em pfexecve_opts
structure is a bitwise OR combination of any of the flags listed in the
.Em pfexecve_flags
enumeration:
.Bl -tag -width PFEXECVE_NOPROMPT
.It Li PFEXECVE_NOPROMPT
Indicates that the call should be treated as non-interactive and no credential
input from the user on the terminal should be attempted. If elevation would
require additional credentials, the presence of this flag will cause it to
fail instead.
.It Li PFEXECVE_USER
Indicates that the
.Em pfo_user
field contains the username of a valid user on the system, and requests that
the privileges of this user be granted to the process rather than those of
.Em root ,
the default.
.El
.Pp
The argument
.Fa argv
is a pointer to a null-terminated array of
character pointers to NUL-terminated character strings.
These strings construct the argument list to be made available to the new
process.
At least one non-null argument must be present in the array;
by custom, the first element should be
the name of the executed program (for example, the last component of
.Fa path ) .
.Pp
The argument
.Fa envp
is also a pointer to a null-terminated array of
character pointers to NUL-terminated strings.
A pointer to this array is normally stored in the global variable
.Va environ .
These strings pass information to the
new process that is not directly an argument to the command (see
.Xr environ 7 ) .
.Pp
.Sh RETURN VALUES
As the
.Fn pfexecve
function overlays the current process image
with a new process image the successful call
has no process to return to.
If
.Fn pfexecve
does return to the calling process an error has occurred; the
return value will be \-1 and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn pfexecve
will fail and return to the calling process if:
.Bl -tag -width Er
.It Bq Er EINVAL
The contents of the given arguments are invalid.
.It Bq Er EPERM
Elevation of privilege was denied by policy.
.It Bq Er ENOTCONN
A connection to the
.Xr pfexecd 8
daemon could not be established in order to evaluate escalation policy.
.El
.Pp
Other errors may be returned as per
.Xr execve 2 .
.Sh SEE ALSO
.Xr execve 2 ,
.Xr pfexecvp 3 ,
.Xr pfexecd 8 ,
.Xr environ 7
